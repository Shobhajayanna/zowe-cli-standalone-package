/*
* This program and the accompanying materials are made available under the terms of the
* Eclipse Public License v2.0 which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-v20.html
*
* SPDX-License-Identifier: EPL-2.0
*
* Copyright Contributors to the Zowe Project.
*
*/
/**
 * @file This script is used to generate a bundled npm package from an existing package.
 * Each package dependency is added to the bundeledDependencies, and the original package.json
 * is overwritten. The final line of output of this script will be the name
 * under which the archive should be saved. (IT IS NOT WHAT WAS GENERATED BY `npm pack`)
 */

const jsonfile = require("jsonfile");
const path = require("path");

// Assumes this is being run from the 'lts' or 'next' build dir; the calling script extracts package to ./temp/
const packageLocation = path.join(process.cwd(), "temp", "package", "package.json");

const packageJson = jsonfile.readFileSync(packageLocation);

// Grab the name and version for use later
let name = packageJson.name;
const version = packageJson.version;

// Initialize bundled dependencies to an empty object
packageJson.bundledDependencies = [];

// Add each dependency as a bundled dependency
for(const x in packageJson.dependencies) {
    packageJson.bundledDependencies.push(x);
}
for(const x in (packageJson.optionalDependencies || {})) {
    packageJson.bundledDependencies.push(x);
}

console.log("====NEW PACKAGE.JSON====");
console.log(packageJson);
console.log("========================");

// Save back to package.json
jsonfile.writeFileSync(packageLocation, packageJson, {spaces: 2});
